/*! angular-dashboard-framework 0.5.0-SNAPSHOT (2014-11-07) */
"use strict";angular.module("adf.provider",[]).provider("dashboard",function(){var a={},b={},c='<div class="alert alert-danger">{}</div>',d='      <div class="progress progress-striped active">\n        <div class="progress-bar" role="progressbar" style="width: 100%">\n          <span class="sr-only">loading ...</span>\n        </div>\n      </div>';this.widget=function(b,c){var d=angular.extend({reload:!1},c);if(d.edit){var e={reload:!0};angular.extend(e,d.edit),d.edit=e}return a[b]=d,this},this.structure=function(a,c){return b[a]=c,this},this.messageTemplate=function(a){return c=a,this},this.loadingTemplate=function(a){return d=a,this},this.$get=function(){return{widgets:a,structures:b,messageTemplate:c,loadingTemplate:d}}}),angular.module("adf",["adf.provider","ui.bootstrap","ui.sortable"]).value("adfTemplatePath","../src/templates/").value("adfVersion","0.5.0-SNAPSHOT"),angular.module("adf").directive("adfDashboard",["$rootScope","$log","$modal","dashboard","adfTemplatePath",function(a,b,c,d,e){function f(a,b){if(a.widgets&&a.widgets.length>0)for(var c=a.widgets.shift();c;)b.widgets.push(c),c=a.widgets.shift()}function g(a,b,c){return angular.forEach(a.rows,function(a){angular.forEach(a.columns,function(a){a.widgets||(a.widgets=[]),b[c]&&(f(b[c],a),c++)})}),c}function h(a){var b=[];return angular.forEach(a.rows,function(a){angular.forEach(a.columns,function(a){b.push(a)})}),b}function i(a,b){var c=h(a);a.rows=angular.copy(b.rows);for(var d=0;d<c.length;)d=g(a,c,d)}function j(a){var b={},c=d.widgets[a].config;return c&&(b=angular.copy(c)),b}return{replace:!0,restrict:"EA",transclude:!1,scope:{structure:"@",name:"@",collapsible:"@",adfModel:"=",adfWidgetFilter:"="},controller:["$scope",function(f){f.sortableOptions={connectWith:".column",handle:".fa-arrows",cursor:"move",tolerance:"pointer",placeholder:"placeholder",forcePlaceholderSize:!0,opacity:.4},f.$watch("adfModel",function(a,c){if(c=!0){{var e=f.adfModel;f.adfWidgetFilter}if(!e||!e.rows){var g=f.structure,h=d.structures[g];h?(e?e.rows=angular.copy(h).rows:e=angular.copy(h),e.structure=g):b.error("could not find structure "+g)}e?(e.title||(e.title="Dashboard"),f.model=e):b.error("could not find or create model")}},!0),f.editMode=!1,f.editClass="",f.toggleEditMode=function(){f.editMode=!f.editMode,f.editMode&&(f.modelCopy=angular.copy(f.adfModel,{})),f.editMode||a.$broadcast("adfDashboardChanged",name,model)},f.cancelEditMode=function(){f.editMode=!1,f.modelCopy=angular.copy(f.modelCopy,f.adfModel)},f.editDashboardDialog=function(){var a=f.$new();a.structures=d.structures;var g=c.open({scope:a,templateUrl:e+"dashboard-edit.html"});f.changeStructure=function(a,c){b.info("change structure to "+a),i(model,c)},a.closeDialog=function(){g.close(),a.$destroy()}},f.addWidgetDialog=function(){var a,b=f.$new();angular.isFunction(widgetFilter)?(a={},angular.forEach(d.widgets,function(b,c){widgetFilter(b,c)&&(a[c]=b)})):a=d.widgets,b.widgets=a;var g={scope:b,templateUrl:e+"widget-add.html"},h=c.open(g);b.addWidget=function(a){var c={type:a,config:j(a)};b.model.rows[0].columns[0].widgets.unshift(c),h.close(),b.$destroy()},b.closeDialog=function(){h.close(),b.$destroy()}}}],link:function(a,b,c){a.name=c.name,a.structure=c.structure},templateUrl:e+"dashboard.html"}}]),angular.module("adf").directive("adfWidgetContent",["$log","$q","$sce","$http","$templateCache","$compile","$controller","$injector","dashboard",function(a,b,c,d,e,f,g,h,i){function j(a){var f=b.defer();if(a.template)f.resolve(a.template);else if(a.templateUrl){var g=c.getTrustedResourceUrl(a.templateUrl);d.get(g,{cache:e}).success(function(a){f.resolve(a)}).error(function(){f.reject("could not load template")})}return f.promise}function k(c,d){var e=c.model,k=c.content;d.html(i.loadingTemplate);var l=c.$new();e.config||(e.config={}),l.config=e.config;var m={$scope:l,widget:e,config:e.config},n={};n.$tpl=j(k),k.resolve&&angular.forEach(k.resolve,function(a,b){n[b]=angular.isString(a)?h.get(a):h.invoke(a,a,m)}),b.all(n).then(function(a){angular.extend(a,m);var b=a.$tpl;if(d.html(b),k.controller){var c=g(k.controller,a);k.controllerAs&&(l[k.controllerAs]=c),d.children().data("$ngControllerController",c)}f(d.contents())(l)},function(b){var c="Could not resolve all promises";b&&(c+=": "+b),a.warn(c),d.html(i.messageTemplate.replace(/{}/g,c))})}return{replace:!0,restrict:"EA",transclude:!1,scope:{model:"=",content:"="},link:function(a,b){k(a,b),a.$on("widgetConfigChanged",function(){k(a,b)}),a.$on("widgetReload",function(){k(a,b)})}}}]),angular.module("adf").directive("adfWidget",["$log","$modal","dashboard","adfTemplatePath",function(a,b,c,d){function e(a){switch(null!=a?a.toLowerCase():null){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(a)}}function f(b,d,f){var g=b.definition;if(g){var h=c.widgets[g.type];if(h){g.title||(g.title=h.title),f.$observe("editMode",function(a){b.editMode=e(a)}),b.widget=angular.copy(h);var i=g.config;i?angular.isString(i)&&(i=angular.fromJson(i)):i={},b.config=i,b.collapsible=e(b.collapsible),b.isCollapsed=!1}else a.warn("could not find widget "+g.type)}else a.debug("definition not specified, widget was probably removed")}function g(c,e){var f=c.definition;f?(c.close=function(){var a=c.col;if(a){var b=a.widgets.indexOf(f);b>=0&&a.widgets.splice(b,1)}e.remove()},c.reload=function(){c.$broadcast("widgetReload")},c.edit=function(){var a=c.$new(),e={scope:a,templateUrl:d+"widget-edit.html"},f=b.open(e);a.closeDialog=function(){f.close(),a.$destroy();var b=c.widget;b.edit&&b.edit.reload&&c.$broadcast("widgetConfigChanged")}}):a.debug("widget not found")}return{replace:!0,restrict:"EA",transclude:!1,templateUrl:d+"widget.html",scope:{definition:"=",col:"=column",editMode:"@",collapsible:"="},compile:function(){return{pre:f,post:g}}}}]),angular.module("adf").run(["$templateCache",function(a){a.put("../src/templates/dashboard-edit.html",'<div class="modal-header"><button type="button" class="close" ng-click="closeDialog()" aria-hidden="true">&times;</button><h4 class="modal-title">Edit Dashboard</h4></div><div class="modal-body"><form role="form"><div class="form-group"><label for="dashboardTitle">Title</label><input type="text" class="form-control" id="dashboardTitle" ng-model="model.title" required></div><div class="form-group"><label>Structure</label><div class="radio" ng-repeat="(key, structure) in structures"><label><input type="radio" value="{{key}}" ng-model="model.structure" ng-change="changeStructure(key, structure)"> {{key}}</label></div></div></form></div><div class="modal-footer"><button type="button" class="btn btn-primary" ng-click="closeDialog()">Close</button></div>'),a.put("../src/templates/dashboard.html",'<div class="dashboard-container"><h1>{{model.title}} <span style="font-size: 16px" class="pull-right"><a href="" ng-if="editMode" title="add new widget" ng-click="addWidgetDialog()"><i class="fa fa-plus-circle"></i></a> <a href="" ng-if="editMode" title="edit dashboard" ng-click="editDashboardDialog()"><i class="fa fa-cog"></i></a> <a href="" title="{{editMode ? \'save changes\' : \'enable edit mode\'}}" ng-click="toggleEditMode()"><i class="fa" x-ng-class="{\'fa-edit\' : !editMode, \'fa-save\' : editMode}"></i></a> <a data-ng-if="editMode" href="" title="undo changes" ng-click="cancelEditMode()"><i class="fa fa-undo"></i></a></span></h1><div class="dashboard" x-ng-class="{\'edit\' : editMode}"><div ng-repeat="row in model.rows" class="row" ng-class="row.styleClass"><div ng-repeat="col in row.columns" class="column" ng-class="col.styleClass" ui-sortable="sortableOptions" ng-model="col.widgets"><div class="widgets" ng-repeat="definition in col.widgets"><adf-widget definition="definition" column="col" edit-mode="{{editMode}}" collapsible="collapsible"></div></div></div></div></div>'),a.put("../src/templates/widget-add.html",'<div class="modal-header"><button type="button" class="close" ng-click="closeDialog()" aria-hidden="true">&times;</button><h4 class="modal-title">Add new widget</h4></div><div class="modal-body"><div style="display: inline-block"><dl class="dl-horizontal"><dt ng-repeat-start="(key, widget) in widgets"><a href="" ng-click="addWidget(key)">{{widget.title}}</a></dt><dd ng-repeat-end ng-if="widget.description">{{widget.description}}</dd></dl></div></div><div class="modal-footer"><button type="button" class="btn btn-primary" ng-click="closeDialog()">Close</button></div>'),a.put("../src/templates/widget-edit.html",'<div class="modal-header"><button type="button" class="close" ng-click="closeDialog()" aria-hidden="true">&times;</button><h4 class="modal-title">{{widget.title}}</h4></div><div class="modal-body"><form role="form"><div class="form-group"><label for="widgetTitle">Title</label><input type="text" class="form-control" id="widgetTitle" ng-model="definition.title" placeholder="Enter title" required></div></form><div ng-if="widget.edit"><adf-widget-content model="definition" content="widget.edit"></div></div><div class="modal-footer"><button type="button" class="btn btn-primary" ng-click="closeDialog()">Close</button></div>'),a.put("../src/templates/widget.html",'<div class="widget panel panel-default"><div class="panel-heading clearfix"><h3 class="panel-title">{{definition.title}} <span class="pull-right"><a href="" title="reload widget content" ng-if="widget.reload" ng-click="reload()"><i class="fa fa-refresh"></i></a> <a href="" title="change widget location" ng-if="editMode"><i class="fa fa-arrows"></i></a> <a href="" title="collapse widget" ng-show="collapsible && !isCollapsed" ng-click="isCollapsed = !isCollapsed"><i class="fa fa-minus"></i></a> <a href="" title="expand widget" ng-show="collapsible && isCollapsed" ng-click="isCollapsed = !isCollapsed"><i class="fa fa-plus"></i></a> <a href="" title="edit widget configuration" ng-click="edit()" ng-if="editMode"><i class="fa fa-cog"></i></a> <a href="" title="remove widget" ng-click="close()" ng-if="editMode"><i class="fa fa-times"></i></a></span></h3></div><div class="panel-body" collapse="isCollapsed"><adf-widget-content model="definition" content="widget"></div></div>')}]);